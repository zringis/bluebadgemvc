@model BlueBadge.Models.JobEdit

@{
    ViewBag.Title = "Edit";
}

<h2>Job</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Edit</h4>
        <hr />

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.JobId)



        <div class="bg-contact2">
            <div class="container-contact2">
                <div class="wrap-contact2">
                    <form class="contact2-form validate-form">
                        @Html.LabelFor(model => model.CompanyName, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="wrap-input2 validate-input" data-validate="Name is required">
                            @Html.EditorFor(model => model.CompanyName, new { htmlAttributes = new { @class = "input2" } })
                            @Html.ValidationMessageFor(model => model.CompanyName, "", new { @class = "text-danger" })

                        </div>

                        @Html.LabelFor(model => model.JobDescription, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="wrap-input2 validate-input" data-validate="Name is required">
                            @Html.EditorFor(model => model.JobDescription, new { htmlAttributes = new { @class = "input2" } })
                            @Html.ValidationMessageFor(model => model.JobDescription, "", new { @class = "text-danger" })
                        </div>

                        @Html.LabelFor(model => model.Location.FullLocation, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="wrap-input2 validate-input" data-validate="Name is required">
                            @Html.DropDownList("LocationId", null, htmlAttributes: new { @class = "input2" })
                            @Html.ValidationMessageFor(model => model.LocationId, "", new { @class = "text-danger" })
                        </div>

                        @Html.LabelFor(model => model.Skill.SkillName, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="wrap-input2 validate-input" data-validate="Name is required">
                            @Html.DropDownList("SkillId", null, htmlAttributes: new { @class = "input2" })
                            @Html.ValidationMessageFor(model => model.SkillId, "", new { @class = "text-danger" })
                        </div>

                    </form>

                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <input type="submit" value="Save" class="btn btn-send" />
                        </div>
                    </div>
                </div>
            </div>
        </div>






    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
